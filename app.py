import streamlit as st
import pandas as pd
import numpy as np
from PIL import Image
#import matplotlib.pyplot as plt

##############
st.sidebar.image("fondo_quimica1.png",
                 caption="P")

##############Pagina 1##############
def Home():
    st.markdown("# ")
    #st.markdown("<h1 style='text-align: center; color: red;'>Juega a crear nuevas historias</h1>", unsafe_allow_html=True)
    st.sidebar.markdown("# Contenido del curso Qu√≠mica I")
    #image = Image.open("elprincipito.jpeg")
    #st.image(image, caption='El principito en Machupichu')

    total1, total2 = st.columns(2, gap='large')
    with total1:
        st.info('Unidad 1: REACCIONES QU√çMICAS')
        st.write('''Generalidades sobre las reacciones qu√≠micas y ecuaciones qu√≠micas. 
                    Clasificaci√≥n de las reacciones qu√≠micas. 
                    Reacciones endot√©rmicas y exot√©rmicas, c√°lculo de la entalp√≠a de la reacci√≥n, 
                    entalp√≠a de reacci√≥n est√°ndar, ejercicios.
                    M√©todos de balanceo de la reacciones qu√≠micas (redox ‚Äì ion electr√≥n).
                    Estequiometria I y las leyes ponderales, ley de conservaci√≥n de la masa y de 
                    las proporciones definidas, problemas. 
                    Estequiometr√≠a II, ley de las relaciones sencillas, problemas con gases 
                    ideales, masa equivalente.''')
        
    with total2:
        st.info('Unidad 2: SOLUCIONES')
        st.write (pd.DataFrame({'Tema': ['Componentes y clasificaci√≥n, ley de n√∫mero equivalente',
                                          'Unidades de concentraci√≥n, fracci√≥n molar, Molaridad', 
                                          'Normalidad y Molalidad, partes por mill√≥n',
                                          'M√©todo de diluci√≥n y mezcla de soluciones',
                                          'problemas de estequiometria de soluciones',
                                          'titulaci√≥n acido ‚Äì base, uso del indicador',
                                          'Propiedades coligativas de las soluciones, ecuaci√≥n de Vant Hoff'
                                        ], 
                                'Fecha': ["Semana", "Semana", 
                                           "Semana","Semana", "Semana", 
                                           "Semana","Semana",]}))
    
    total3, total4 = st.columns(2, gap='large')
    with total3:
        st.info('Unidad 3: CIN√âTICA QU√çMICA')
        st.write('''Definici√≥n, generalidades / C√°lculo de la velocidad de una reacci√≥n qu√≠mica / Velocidades de reacci√≥n de orden cero, de 1¬∞ y 2¬∫ orden, ejercicios / C√°lculo de la vida media de una reacci√≥n qu√≠mica / Factores que modifican la velocidad de reacci√≥n (temperatura, presi√≥n, concentraci√≥n y catalizador).''')
        
    with total4:
        st.info('Unidad 4: EQUILIBRIO QU√çMICO ')
        st.write ('''Definici√≥n, caracter√≠sticas / C√°lculo de la constante de equilibrio qu√≠mico Kp y Kc / Relaci√≥n de las constantes Kp y Kc / Grado de reacci√≥n (a) y cociente de reacci√≥n (Q) / relaciones entre ùõº, Q y Kc 1 teor√≠a de √°cidos y bases / teor√≠a de constante de acides y basicidad, Ka y Kb, teor√≠a de auto- ionizaci√≥n del agua, Kw / Potencial del i√≥n hidrogeno (pH), problemas / hidr√≥lisis (Kh), soluciones buffer o tamp√≥n /c√°lculo del pH / Producto de solub√≠lidad (Kps), efecto del ion com√∫n, solubilidad molar/ precipitaci√≥n selectiva de iones (cationes y aniones).'''))

    #image = Image.open("DALL¬∑E 2022-12-26 21.10.51 - Humberto Maturana head for 3D printing.png")
    #st.image(image, caption='Personaje ilustrado por IA para impresi√≥n 3D')
    
##############Pagina 2##############
def page2():
    st.markdown("# Ta")
    st.sidebar.markdown("# M")
    
    total5, total6 = st.columns(2, gap='large')
    with total5:
        st.info('Curso virtual (8 horas)')
        st.write('''E''')
        st.write (pd.DataFrame({'Temas': ['P',
                                  'P1', 
                                  'L','I'], 
                        'Horas': ["2", "2", 
                                   "2", "2"]}))
        st.write('N.')
    with total6:
        st.info('M')
        st.write('''P''')
        st.write('''C.''') 
        st.write('''C.''')
        st.write('''E''')
        st.write (pd.DataFrame({'Modalidad': ['General',
                                          'Estudiantes', 
                                          'Corporativo (grupos de 4)'], 
                                'Inversi√≥n': ["S", "S0", 
                                           "S1"]}))
    #image = Image.open("alberteinstein.jpeg")
    #st.image(image, caption='¬øRecuerdas cuando Albert Einstein visit√≥ Machupichu? Despierta historias alucinantes a trav√©s de la generaci√≥n de im√°genes con IA.')
  
    #image = Image.open("logPann_red.png")
    #st.image(image, caption='Descubre c√≥mo las redes neuronales artificiales est√°n revolucionando diversas √°reas del conocimiento')


##
def page3():
  st.header('M√°s informaci√≥n', divider='rainbow')
  
  st.link_button("Youtube", "https://www.youtube.com/channel/UCm6lcnfmNS2stsUYVvrFOzg")
   
  st.link_button("Github", "https://github.com/inefable12")
  
  st.write('''S.''')

  st.write('''texto1''')
  st.markdown("<h1 style='text-align: center; color: purple;'>Texto 2</h1>", unsafe_allow_html=True)

##
page_names_to_funcs = {
  "Contenido del Curso": Home,
  "Actividad": page2,
  "Consultas": page3,
}

selected_page = st.sidebar.selectbox("Selecciona una p√°gina", page_names_to_funcs.keys())
page_names_to_funcs[selected_page]()
